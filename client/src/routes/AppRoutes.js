import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { lazy, Suspense } from "react";
import { Routes, Route } from "react-router-dom";
import Loading from "../shared/Loading/Loading.tsx";
import FAQPage from "../pages/MainPages/FAQPage/FAQPage.tsx";
import SignUpPage from "../pages/MainAuthPages/Signup/SignUpPage.tsx";
import AboutPage from "../pages/MainPages/AboutPage/AboutPage.tsx";
import TermsPage from "../pages/MainPages/TermsPage/TermsPage.tsx";
import ContactPage from "../pages/MainPages/ContactPage/ContactPage.tsx";
import MainLayout from "../Layouts/MainLayout/MainLayout.tsx";
import EntryPage from "../pages/MainAuthPages/Entry/EntryPage.tsx";
import DashboardEntryLayout from "../Layouts/DashboardEntryLayout.tsx";
import DashboardSideLayout from "../Layouts/DashboardSideLayout.tsx";
import ProjectsPage from "../pages/Dashboard/ProjectsPage/ProjectsPage.tsx";
import RequestsPage from "../pages/Dashboard/RequestsPage/RequestsPage.tsx";
import ServicesPage from "../pages/Dashboard/ServicesPage/ServicesPage.tsx";
import DashboardPage from "../pages/Dashboard/DashboardPage/DashboardPage.tsx";
import UsersPage from "../pages/Dashboard/UsersPage/UsersPage.tsx";
import MarketPlacePage from "../pages/MainPages/MarketPlacePage/MarketPlacePage.tsx";
import ProfilePage from "../pages/ProfilePage/ProfilePage.tsx";
import { useAuth } from "../hooks/useAuth.ts";
import PrivateRoute from "./PrivateRoute.tsx";
const HomePage = lazy(() => import("../pages/MainPages/HomePage/HomePage.tsx"));
const LoginPage = lazy(() => import("../pages/MainAuthPages/Login/LoginPage.tsx"));
const ActiveProjectsPage = lazy(() => import("../pages/ActiveProjects/ActiveProjects.tsx"));
const RequestManagerPage = lazy(() => import("../pages/RequestManager/RequestManager.tsx"));
const ManageServicesPage = lazy(() => import("../pages/ManageServices/ManageServices.tsx"));
const ServicesPagePage = lazy(() => import("../pages/MainPages/ServicesPage/ServicesPage.tsx"));
const NotFound = lazy(() => import("../pages/NotFound/NotFound.tsx"));
const AppRoutes = () => {
    const { user, loading } = useAuth();
    return (_jsx(Suspense, { fallback: _jsx(Loading, {}), children: _jsxs(Routes, { children: [_jsxs(Route, { path: "/", element: _jsx(MainLayout, {}), children: [_jsx(Route, { index: true, element: _jsx(HomePage, {}) }), _jsx(Route, { path: "/about", element: _jsx(AboutPage, {}) }), _jsx(Route, { path: "/Market_place", element: _jsx(MarketPlacePage, {}) }), _jsx(Route, { path: "/terms", element: _jsx(TermsPage, {}) }), _jsx(Route, { path: "/FAQ", element: _jsx(FAQPage, {}) }), _jsx(Route, { path: "/contact", element: _jsx(ContactPage, {}) })] }), _jsx(Route, { path: "auth/:role", element: _jsx(DashboardEntryLayout, {}), children: _jsx(Route, { index: true, element: _jsx(EntryPage, {}) }) }), _jsxs(Route, { path: "auth/:role", element: _jsx(DashboardSideLayout, {}), children: [_jsx(Route, { path: "register", element: _jsx(SignUpPage, {}) }), _jsx(Route, { path: "register/:plan", element: _jsx(SignUpPage, {}) }), _jsx(Route, { path: "login", element: _jsx(LoginPage, {}) })] }), _jsx(Route, { element: _jsx(PrivateRoute, { user: user, loading: loading }), children: _jsxs(Route, { path: "/dashboard", element: _jsx(DashboardSideLayout, {}), children: [_jsx(Route, { index: true, element: _jsx(DashboardPage, {}) }), _jsx(Route, { path: "projects", element: _jsx(ProjectsPage, {}) }), _jsx(Route, { path: "requests", element: _jsx(RequestsPage, {}) }), _jsx(Route, { path: "users", element: _jsx(UsersPage, {}) }), _jsx(Route, { path: "services", element: _jsx(ServicesPage, {}) }), _jsx(Route, { path: "profile", element: _jsx(ProfilePage, { userId: user?._id }) }), _jsx(Route, { path: "/dashboard/active-projects", element: _jsx(ActiveProjectsPage, {}) }), _jsx(Route, { path: "/dashboard/request-manager", element: _jsx(RequestManagerPage, {}) }), _jsx(Route, { path: "/dashboard/manage-services", element: _jsx(ManageServicesPage, {}) }), _jsx(Route, { path: "/dashboard/services", element: _jsx(ServicesPagePage, {}) })] }) }), _jsx(Route, { path: "*", element: _jsx(NotFound, {}) })] }) }));
};
export default AppRoutes;
